---

---
<style>
  .container {
    background-color: var(--bg, #171819);
    display: flex;
    padding-top: 28px;
    flex-direction: column;
    align-items: center;
  }

  .section-hero {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    position: relative;
    min-height: 575px;
    width: 100%;
    max-width: 1455px;
    align-items: center;
    font-size: 20px;
    color: var(--body, rgba(255, 255, 255, 0.68));
    font-weight: 400;
    text-align: center;
    letter-spacing: 0.2px;
    line-height: 32px;
    justify-content: center;
    padding: 80px 60px;
  }

  @media (max-width: 991px) {
    .section-hero {
      max-width: 100%;
      padding: 0 20px;
    }
  }

  .background-image {
    position: absolute;
    inset: 0;
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: center;
  }

  .content-wrapper {
    position: relative;
    display: flex;
    width: 697px;
    max-width: 100%;
    flex-direction: column;
    margin: 69px 0 12px;
  }

  @media (max-width: 991px) {
    .content-wrapper {
      margin-top: 40px;
    }
  }

  .logo-image {
    aspect-ratio: 5.56;
    object-fit: auto;
    object-position: center;
    width: 388px;
    align-self: center;
    max-width: 100%;
  }

  .description {
    font-family: Inter, sans-serif;
    margin-top: 93px;
  }

  @media (max-width: 991px) {
    .description {
      max-width: 100%;
      margin-top: 40px;
    }
  }

  .section-approach {
    display: flex;
    margin-top: 86px;
    width: 100%;
    max-width: 1195px;
    flex-direction: column;
    padding: 0 20px;
  }

  @media (max-width: 991px) {
    .section-approach {
      max-width: 100%;
      margin-top: 40px;
    }
  }

  .section-title {
    color: var(--body, rgba(255, 255, 255, 0.68));
    letter-spacing: 0.36px;
    font: 400 36px/133% Montserrat, sans-serif;
  }

  @media (max-width: 991px) {
    .section-title {
      max-width: 100%;
    }
  }

  .approach-content {
    margin-top: 32px;
  }

  @media (max-width: 991px) {
    .approach-content {
      max-width: 100%;
    }
  }

  .approach-columns {
    gap: 20px;
    display: flex;
  }

  @media (max-width: 991px) {
    .approach-columns {
      flex-direction: column;
      align-items: stretch;
      gap: 0px;
    }
  }

  .approach-column {
    display: flex;
    flex-direction: column;
    line-height: normal;
    width: 25%;
    margin-left: 0px;
  }

  @media (max-width: 991px) {
    .approach-column {
      width: 100%;
    }
  }

  .approach-column-content {
    padding-right: 24px;
    display: flex;
    flex-grow: 1;
    flex-direction: column;
  }

  @media (max-width: 991px) {
    .approach-column-content {
      margin-top: 16px;
    }
  }

  .approach-title {
    color: var(--orange, #ff6000);
    letter-spacing: 0.2px;
    font: 500 20px Montserrat, sans-serif;
  }

  .approach-description {
    color: var(--body, rgba(255, 255, 255, 0.68));
    letter-spacing: 0.16px;
    margin-top: 16px;
    font: 400 16px/26px Inter, sans-serif;
  }

  .section-data-mesh {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 4px;
    overflow: hidden;
    align-self: stretch;
    position: relative;
    min-height: 544px;
    margin-top: 159px;
    width: 100%;
    padding: 70px 60px;
  }

  @media (max-width: 991px) {
    .section-data-mesh {
      max-width: 100%;
      margin-top: 40px;
      padding: 0 20px;
    }
  }

  .data-mesh-content {
    position: relative;
    display: flex;
    width: 713px;
    max-width: 100%;
    flex-direction: column;
    margin: 58px 0 30px;
  }

  @media (max-width: 991px) {
    .data-mesh-content {
      margin-top: 40px;
    }
  }

  .data-mesh-title {
    color: var(--orange, #ff6000);
    letter-spacing: 0.4px;
    align-self: center;
    font: 500 40px/133% Montserrat, sans-serif;
  }

  .data-mesh-description {
    color: var(--body, rgba(255, 255, 255, 0.68));
    text-align: center;
    letter-spacing: 0.2px;
    margin-top: 16px;
    font: 400 20px/32px Inter, sans-serif;
  }

  @media (max-width: 991px) {
    .data-mesh-description {
      max-width: 100%;
    }
  }

  .info-text {
    color: var(--complimentary, #7abeb6);
    letter-spacing: 0.16px;
    margin-top: 132px;
    width: 792px;
    font: 400 16px/26px Inter, sans-serif;
  }

  @media (max-width: 991px) {
    .info-text {
      max-width: 100%;
      margin-top: 40px;
    }
  }

  .journey-text {
    color: var(--orange, #ff6000);
    text-align: center;
    letter-spacing: 0.2px;
    margin-top: 148px;
    width: 792px;
    font: 400 20px/32px Inter, sans-serif;
  }

  @media (max-width: 991px) {
    .journey-text {
      max-width: 100%;
      margin-top: 40px;
    }
  }

  .footer {
    border-color: rgba(255, 255, 255, 0.16);
    border-style: solid;
    border-top-width: 1px;
    margin-top: 228px;
    width: 100%;
    max-width: 1196px;
    padding: 40px 20px 0;
  }

  @media (max-width: 991px) {
    .footer {
      max-width: 100%;
      margin-top: 40px;
    }
  }

  .footer-content {
    gap: 20px;
    display: flex;
  }

  @media (max-width: 991px) {
    .footer-content {
      flex-direction: column;
      align-items: stretch;
      gap: 0px;
    }
  }

  .footer-column {
    display: flex;
    flex-direction: column;
    line-height: normal;
    width: 33%;
    margin-left: 0px;
  }

  @media (max-width: 991px) {
    .footer-column {
      width: 100%;
    }
  }

  .footer-column-top {
    align-self: stretch;
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    font-size: 11px;
    color: var(--body, rgba(255, 255, 255, 0.68));
    font-weight: 400;
    letter-spacing: 0.11px;
    line-height: 24px;
    padding: 10px 0 80px;
  }

  @media (max-width: 991px) {
    .footer-column-top {
      margin-top: 40px;
    }
  }

  .logo-footer {
    aspect-ratio: 5.88;
    object-fit: auto;
    object-position: center;
    width: 95px;
    fill: var(--orange, #ff6000);
  }

  .footer-text {
    font-family: Inter, sans-serif;
    margin-top: 16px;
  }

  .footer-column-middle {
    align-items: start;
    align-self: stretch;
    display: flex;
    flex-direction: column;
    font-size: 11px;
    color: var(--orange, #ff6000);
    font-weight: 400;
    letter-spacing: 0.11px;
    line-height: 24px;
    justify-content: center;
    padding: 10px 0;
  }

  @media (max-width: 991px) {
    .footer-column-middle {
      margin-top: 40px;
    }
  }

  .footer-links {
    display: flex;
    flex-direction: column;
  }

  .link {
    font-family: Inter, sans-serif;
    text-decoration-line: underline;
  }
</style>

<!-- Particle System Script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
<script type="module">
  let numParticles = 400; // Number of particles
  let particles = [];
  let lines = [];
  let maxLines = 5; // Maximum number of lines to appear simultaneously

  function setup() {
    let canvas = createCanvas(windowWidth, 300);
    canvas.parent("particleCanvas"); // Attach the canvas to the particleCanvas div
    canvas.style("position", "relative");
    canvas.style("top", "0");
    canvas.style("left", "0");
    canvas.style("width", "100%");
    canvas.style("height", "100%");
    canvas.style("z-index", "-1");

    for (let i = 0; i < numParticles; i++) {
      particles.push(new Particle());
    }
  }

  function draw() {
    clear();

    // Move and display particles
    for (let i = 0; i < numParticles; i++) {
      particles[i].move();
      particles[i].display();
    }

    // Draw connecting lines
    for (let i = lines.length - 1; i >= 0; i--) {
      let l = lines[i];
      l.update();
      if (l.isDead()) {
        lines.splice(i, 1);
      } else {
        l.display();
      }
    }

    // Add new lines randomly
    if (lines.length < maxLines) {
      for (let i = 0; i < numParticles; i++) {
        for (let j = i + 1; j < numParticles; j++) {
          if (
            dist(
              particles[i].x,
              particles[i].y,
              particles[j].x,
              particles[j].y
            ) < 100 &&
            random(1) < 0.001
          ) {
            lines.push(new Line(particles[i], particles[j]));
          }
        }
      }
    }
  }

  class Particle {
    constructor() {
      this.x = random(width);
      this.y = random(height);
      this.speedX = 0;
      this.speedY = 0;
      this.diameter = random(1, 2);
      this.noiseOffsetX = random(1000);
      this.noiseOffsetY = random(1000);
    }

    move() {
      this.speedX = map(noise(this.noiseOffsetX), 0, 1, -1, 1);
      this.speedY = map(noise(this.noiseOffsetY), 0, 1, -1, 1);
      this.noiseOffsetX += 0.01;
      this.noiseOffsetY += 0.01;

      this.x += this.speedX * 0.5;
      this.y += this.speedY * 0.5;

      // Wrap around the screen
      if (this.x < 0) this.x = width;
      if (this.x > width) this.x = 0;
      if (this.y < 0) this.y = height;
      if (this.y > height) this.y = 0;
    }

    display() {
      noStroke();
      fill(150);
      ellipse(this.x, this.y, this.diameter, this.diameter);
    }
  }

  class Line {
    constructor(p1, p2) {
      this.p1 = p1;
      this.p2 = p2;
      this.lifespan = 80; // lasts for about a second at 60 FPS
    }

    update() {
      this.lifespan--;
    }

    isDead() {
      return this.lifespan <= 0;
    }

    display() {
      stroke(255, map(this.lifespan, 0, 60, 0, 255));
      line(this.p1.x, this.p1.y, this.p2.x, this.p2.y);
    }
  }

  function windowResized() {
    resizeCanvas(windowWidth, 300);
  }

  window.setup = setup;
  window.draw = draw;
  window.windowResized = windowResized;
</script>

<section class="section-data-mesh" style="position: relative; width: 100%; height: 300px;">
  <!-- <div id="particleCanvas" style="position: relative; width: 100%; height: 300px;"></div> -->
  <div class="data-mesh-content">
    <h2 class="data-mesh-title">What is Data Mesh?</h2>
    <p class="data-mesh-description">
      Data mesh is a paradigm shift in data architecture, moving away from monolithic data warehouses and lakes 
      towards a decentralized, domain-oriented approach. It treats data as a product, managed by cross-functional 
      teams who own their data pipelines end-to-end.<br />This model enhances scalability, accelerates innovation, 
      and improves data quality and governance.
    </p>
  </div>
</section>
